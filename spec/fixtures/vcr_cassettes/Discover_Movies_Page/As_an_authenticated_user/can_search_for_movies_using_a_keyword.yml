---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=SECRET_TMDB_API_KEY&page=1&query=Avengers
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Content-Type:
      - application/json
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 25 Aug 2020 21:47:57 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 e1b5abb53c407f0a057625c46693461d.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - eFfSrF9SfeG0DGswwwlZ7dX5SnpkSOpmdv6u_tZTZvCapEyTCsjyyQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxLCJ0b3RhbF9yZXN1bHRzIjo0OCwidG90YWxfcGFnZXMiOjMsInJlc3VsdHMiOlt7InBvcHVsYXJpdHkiOjEwMC4xNjksInZvdGVfY291bnQiOjE5NDA2LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC83V3N5Q2hRTEVmdEZpRE9WVEdrdjNoRnB5eXQuanBnIiwiaWQiOjI5OTUzNiwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC9iT0drZ1JHZGhyQllKU0xwWGF4aFhWc3RkZFYuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQXZlbmdlcnM6IEluZmluaXR5IFdhciIsImdlbnJlX2lkcyI6WzI4LDEyLDg3OF0sInRpdGxlIjoiQXZlbmdlcnM6IEluZmluaXR5IFdhciIsInZvdGVfYXZlcmFnZSI6OC4zLCJvdmVydmlldyI6IkFzIHRoZSBBdmVuZ2VycyBhbmQgdGhlaXIgYWxsaWVzIGhhdmUgY29udGludWVkIHRvIHByb3RlY3QgdGhlIHdvcmxkIGZyb20gdGhyZWF0cyB0b28gbGFyZ2UgZm9yIGFueSBvbmUgaGVybyB0byBoYW5kbGUsIGEgbmV3IGRhbmdlciBoYXMgZW1lcmdlZCBmcm9tIHRoZSBjb3NtaWMgc2hhZG93czogVGhhbm9zLiBBIGRlc3BvdCBvZiBpbnRlcmdhbGFjdGljIGluZmFteSwgaGlzIGdvYWwgaXMgdG8gY29sbGVjdCBhbGwgc2l4IEluZmluaXR5IFN0b25lcywgYXJ0aWZhY3RzIG9mIHVuaW1hZ2luYWJsZSBwb3dlciwgYW5kIHVzZSB0aGVtIHRvIGluZmxpY3QgaGlzIHR3aXN0ZWQgd2lsbCBvbiBhbGwgb2YgcmVhbGl0eS4gRXZlcnl0aGluZyB0aGUgQXZlbmdlcnMgaGF2ZSBmb3VnaHQgZm9yIGhhcyBsZWQgdXAgdG8gdGhpcyBtb21lbnQgLSB0aGUgZmF0ZSBvZiBFYXJ0aCBhbmQgZXhpc3RlbmNlIGl0c2VsZiBoYXMgbmV2ZXIgYmVlbiBtb3JlIHVuY2VydGFpbi4iLCJyZWxlYXNlX2RhdGUiOiIyMDE4LTA0LTI1In0seyJwb3B1bGFyaXR5Ijo0OC4zNTgsInZvdGVfY291bnQiOjE0Njk2LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC9vcjA2Rk4zRGthNXR1a0sxZTlzbDE2cEIzaXkuanBnIiwiaWQiOjI5OTUzNCwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC9vcmppQjNvVUlzeXo2MGhvRXFraUdweTVDZU8uanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQXZlbmdlcnM6IEVuZGdhbWUiLCJnZW5yZV9pZHMiOlsyOCwxMiw4NzhdLCJ0aXRsZSI6IkF2ZW5nZXJzOiBFbmRnYW1lIiwidm90ZV9hdmVyYWdlIjo4LjMsIm92ZXJ2aWV3IjoiQWZ0ZXIgdGhlIGRldmFzdGF0aW5nIGV2ZW50cyBvZiBBdmVuZ2VyczogSW5maW5pdHkgV2FyLCB0aGUgdW5pdmVyc2UgaXMgaW4gcnVpbnMgZHVlIHRvIHRoZSBlZmZvcnRzIG9mIHRoZSBNYWQgVGl0YW4sIFRoYW5vcy4gV2l0aCB0aGUgaGVscCBvZiByZW1haW5pbmcgYWxsaWVzLCB0aGUgQXZlbmdlcnMgbXVzdCBhc3NlbWJsZSBvbmNlIG1vcmUgaW4gb3JkZXIgdG8gdW5kbyBUaGFub3MnIGFjdGlvbnMgYW5kIHJlc3RvcmUgb3JkZXIgdG8gdGhlIHVuaXZlcnNlIG9uY2UgYW5kIGZvciBhbGwsIG5vIG1hdHRlciB3aGF0IGNvbnNlcXVlbmNlcyBtYXkgYmUgaW4gc3RvcmUuIiwicmVsZWFzZV9kYXRlIjoiMjAxOS0wNC0yNCJ9LHsicG9wdWxhcml0eSI6MzguMTE4LCJ2b3RlX2NvdW50IjoyMjk4NCwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvUllNWDJ3Y0tDQkFyMjRVeVBEN3h3bWphVG4uanBnIiwiaWQiOjI0NDI4LCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcL2t3VVFGZUZYT09wZ2xvTWdaYWFkaHprYlRJNC5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgQXZlbmdlcnMiLCJnZW5yZV9pZHMiOlsyOCwxMiw4NzhdLCJ0aXRsZSI6IlRoZSBBdmVuZ2VycyIsInZvdGVfYXZlcmFnZSI6Ny43LCJvdmVydmlldyI6IldoZW4gYW4gdW5leHBlY3RlZCBlbmVteSBlbWVyZ2VzIGFuZCB0aHJlYXRlbnMgZ2xvYmFsIHNhZmV0eSBhbmQgc2VjdXJpdHksIE5pY2sgRnVyeSwgZGlyZWN0b3Igb2YgdGhlIGludGVybmF0aW9uYWwgcGVhY2VrZWVwaW5nIGFnZW5jeSBrbm93biBhcyBTLkguSS5FLkwuRC4sIGZpbmRzIGhpbXNlbGYgaW4gbmVlZCBvZiBhIHRlYW0gdG8gcHVsbCB0aGUgd29ybGQgYmFjayBmcm9tIHRoZSBicmluayBvZiBkaXNhc3Rlci4gU3Bhbm5pbmcgdGhlIGdsb2JlLCBhIGRhcmluZyByZWNydWl0bWVudCBlZmZvcnQgYmVnaW5zISIsInJlbGVhc2VfZGF0ZSI6IjIwMTItMDQtMjUifSx7InBvcHVsYXJpdHkiOjc3LjE5MSwidm90ZV9jb3VudCI6MTYzNjMsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcLzRzc0R1dkVEa1NBcldFZHlCbDJYNUVIdllLVS5qcGciLCJpZCI6OTk4NjEsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6IlwvOGk2WkRrOTdWeWgwakhvaE1HNHZGZUZ1S0poLmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkF2ZW5nZXJzOiBBZ2Ugb2YgVWx0cm9uIiwiZ2VucmVfaWRzIjpbMjgsMTIsODc4XSwidGl0bGUiOiJBdmVuZ2VyczogQWdlIG9mIFVsdHJvbiIsInZvdGVfYXZlcmFnZSI6Ny4zLCJvdmVydmlldyI6IldoZW4gVG9ueSBTdGFyayB0cmllcyB0byBqdW1wc3RhcnQgYSBkb3JtYW50IHBlYWNla2VlcGluZyBwcm9ncmFtLCB0aGluZ3MgZ28gYXdyeSBhbmQgRWFydGjigJlzIE1pZ2h0aWVzdCBIZXJvZXMgYXJlIHB1dCB0byB0aGUgdWx0aW1hdGUgdGVzdCBhcyB0aGUgZmF0ZSBvZiB0aGUgcGxhbmV0IGhhbmdzIGluIHRoZSBiYWxhbmNlLiBBcyB0aGUgdmlsbGFpbm91cyBVbHRyb24gZW1lcmdlcywgaXQgaXMgdXAgdG8gVGhlIEF2ZW5nZXJzIHRvIHN0b3AgaGltIGZyb20gZW5hY3RpbmcgaGlzIHRlcnJpYmxlIHBsYW5zLCBhbmQgc29vbiB1bmVhc3kgYWxsaWFuY2VzIGFuZCB1bmV4cGVjdGVkIGFjdGlvbiBwYXZlIHRoZSB3YXkgZm9yIGFuIGVwaWMgYW5kIHVuaXF1ZSBnbG9iYWwgYWR2ZW50dXJlLiIsInJlbGVhc2VfZGF0ZSI6IjIwMTUtMDQtMjIifSx7InBvcHVsYXJpdHkiOjE0LjY4OCwidm90ZV9jb3VudCI6NzEsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcLzFTYkJLQ2JuVUxBQ09xV0tON2VMZlR1MWdWbS5qcGciLCJpZCI6MzIzNjYwLCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcL3R1aTlaMlFFb1pTSVBaTWZwdlBjTlA5SElvQS5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJBdmVuZ2VycyBHcmltbSIsImdlbnJlX2lkcyI6WzI4LDE0XSwidGl0bGUiOiJBdmVuZ2VycyBHcmltbSIsInZvdGVfYXZlcmFnZSI6NCwib3ZlcnZpZXciOiJXaGVuIFJ1bXBlbHN0aWx0c2tpbiBkZXN0cm95cyB0aGUgTWFnaWMgTWlycm9yIGFuZCBlc2NhcGVzIHRvIHRoZSBtb2Rlcm4gd29ybGQsIHRoZSBmb3VyIHByaW5jZXNzZXMgb2YgXCJPbmNlIFVwb24gYSBUaW1lXCItQ2luZGVyZWxsYSwgU2xlZXBpbmcgQmVhdXR5LCBTbm93IFdoaXRlLCBhbmQgUmFwdW56ZWwtYXJlIHN1Y2tlZCB0aHJvdWdoIHRoZSBwb3J0YWwgdG9vLiBXZWxsLXRyYWluZWQgYW5kIGVuZG93ZWQgd2l0aCBtYWdpY2FsIHBvd2VycywgdGhlIGZvdXIgd29tZW4gbXVzdCBmaWdodCBSdW1wZWxzdGlsdHNraW4gYW5kIGhpcyBhcm15IG9mIHRocmFsbHMgYmVmb3JlIGhlIGVuc2xhdmVzIGV2ZXJ5b25lIG9uIEVhcnRoLiIsInJlbGVhc2VfZGF0ZSI6IjIwMTUtMDMtMTcifSx7InBvcHVsYXJpdHkiOjEzLjE4OSwidm90ZV9jb3VudCI6NDM4LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC8xcDV0aHlRNHBDeTg3NkhwZHZGQVJxSjYyTjkuanBnIiwiaWQiOjkzMjAsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6IlwvZnJ5ZW45Zm5qbG0wWWliS1RETkd6V05CT1NvLmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBBdmVuZ2VycyIsImdlbnJlX2lkcyI6Wzg3OCw1M10sInRpdGxlIjoiVGhlIEF2ZW5nZXJzIiwidm90ZV9hdmVyYWdlIjo0LjMsIm92ZXJ2aWV3IjoiQnJpdGlzaCBNaW5pc3RyeSBhZ2VudCBKb2huIFN0ZWVkLCB1bmRlciBkaXJlY3Rpb24gZnJvbSBcIk1vdGhlclwiLCBpbnZlc3RpZ2F0ZXMgYSBkaWFib2xpY2FsIHBsb3QgYnkgYXJjaC12aWxsYWluIFNpciBBdWd1c3QgZGUgV3ludGVyIHRvIHJ1bGUgdGhlIHdvcmxkIHdpdGggaGlzIHdlYXRoZXIgY29udHJvbCBtYWNoaW5lLiBTdGVlZCBpbnZlc3RpZ2F0ZXMgdGhlIGJlYXV0aWZ1bCBEb2N0b3IgTXJzLiBFbW1hIFBlZWwsIHRoZSBvbmx5IHN1c3BlY3QsIGJ1dCBzaW11bHRhbmVvdXNseSBmYWxscyBmb3IgaGVyIGFuZCBqb2lucyBmb3JjZXMgd2l0aCBoZXIgdG8gY29tYmF0IFNpciBBdWd1c3QuIiwicmVsZWFzZV9kYXRlIjoiMTk5OC0wOC0xMyJ9LHsicG9wdWxhcml0eSI6MTEuNDg2LCJ2b3RlX2NvdW50IjozNSwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwveGZBY3U3NERSUVhlTTlYcUZjRTVNclNSellQLmpwZyIsImlkIjo1MjE3MjAsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6IlwvbWRTcnhNZzRsNmE3NkFGb0JXbXU3UTFYNFJ0LmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkF2ZW5nZXJzIEdyaW1tOiBUaW1lIFdhcnMiLCJnZW5yZV9pZHMiOlsyOCwxMiwxNF0sInRpdGxlIjoiQXZlbmdlcnMgR3JpbW06IFRpbWUgV2FycyIsInZvdGVfYXZlcmFnZSI6NC42LCJvdmVydmlldyI6IldoZW4gUnVtcGVsc3RpbHRza2luIHRyaWVzIHRvIHRha2Ugb3ZlciBFYXJ0aCBvbmNlIGFuZCBmb3IgYWxsLCBUaGUgQXZlbmdlcnMgR3JpbW0gbXVzdCB0cmFjayBoaW0gZG93biB0aHJvdWdoIHRpbWUgaW4gb3JkZXIgdG8gZGVmZWF0IGhpbS4iLCJyZWxlYXNlX2RhdGUiOiIyMDE4LTA1LTAxIn0seyJwb3B1bGFyaXR5Ijo5LjE1NSwidm90ZV9jb3VudCI6MjEyLCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC9pTUNrR0hWcllSZHFLUk9QUlBtVmFKVlNsZzMuanBnIiwiaWQiOjE0NjA5LCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcL3A1dVRaSHJYd1dYMGo5ZFlaSzh5eDIyc083VC5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJVbHRpbWF0ZSBBdmVuZ2VyczogVGhlIE1vdmllIiwiZ2VucmVfaWRzIjpbMjgsMTIsMTYsODc4XSwidGl0bGUiOiJVbHRpbWF0ZSBBdmVuZ2VyczogVGhlIE1vdmllIiwidm90ZV9hdmVyYWdlIjo2LjYsIm92ZXJ2aWV3IjoiV2hlbiBhIG51Y2xlYXIgbWlzc2lsZSB3YXMgZmlyZWQgYXQgV2FzaGluZ3RvbiBpbiAxOTQ1LCBDYXB0YWluIEFtZXJpY2EgbWFuYWdlZCB0byBkZXRvbmF0ZSBpdCBpbiB0aGUgdXBwZXIgYXRtb3NwaGVyZS4gQnV0IHRoZW4gaGUgZmVsbCBtaWxlcyBpbnRvIHRoZSBpY3kgZGVwdGhzIG9mIHRoZSBOb3J0aCBBdGxhbnRpYywgd2hlcmUgaGUgcmVtYWluZWQgbG9zdCBmb3Igb3ZlciBzaXh0eSB5ZWFycy4gQnV0IG5vdywgd2l0aCB0aGUgd29ybGQgZmFjaW5nIHRoZSB2ZXJ5IHNhbWUgZXZpbCwgQ2FwdGFpbiBBbWVyaWNhIG11c3QgcmlzZSBhZ2FpbiBhcyBvdXIgbGFzdCBob3BlIGZvciBzdXJ2aXZhbC4iLCJyZWxlYXNlX2RhdGUiOiIyMDA2LTAyLTIxIn0seyJwb3B1bGFyaXR5IjoxMS43ODcsInZvdGVfY291bnQiOjEyOCwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvZnBHMU5EYmNMVjJhN2M4WDdMQzRGUElTQlQ3LmpwZyIsImlkIjoxNDYxMywiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC84TjkxdVl3cnIxdWVwRUtibXltMXRnZlhselMuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiTmV4dCBBdmVuZ2VyczogSGVyb2VzIG9mIFRvbW9ycm93IiwiZ2VucmVfaWRzIjpbMTYsMTA3NTFdLCJ0aXRsZSI6Ik5leHQgQXZlbmdlcnM6IEhlcm9lcyBvZiBUb21vcnJvdyIsInZvdGVfYXZlcmFnZSI6Ni43LCJvdmVydmlldyI6IlRoZSBjaGlsZHJlbiBvZiB0aGUgQXZlbmdlcnMgaG9uZSB0aGVpciBwb3dlcnMgYW5kIGdvIGhlYWQgdG8gaGVhZCB3aXRoIHRoZSB2ZXJ5IGVuZW15IHJlc3BvbnNpYmxlIGZvciB0aGVpciBwYXJlbnRzJyBkZW1pc2UuIiwicmVsZWFzZV9kYXRlIjoiMjAwOC0wOS0wMiJ9LHsicG9wdWxhcml0eSI6Ni40NjMsInZvdGVfY291bnQiOjEwLCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC9laFRZV3VQS3dsOHNYUFgwSTZMbnZKVURhVmwuanBnIiwiaWQiOjM0NzE1OCwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJCaWtpbmkgQXZlbmdlcnMiLCJnZW5yZV9pZHMiOlszNV0sInRpdGxlIjoiQmlraW5pIEF2ZW5nZXJzIiwidm90ZV9hdmVyYWdlIjo1LjcsIm92ZXJ2aWV3IjoiV2hlbiB0aGUgSmFkZSBFbXByZXNzIHN0ZWFscyB0aGUgd29ybGQncyBsYXJnZXN0IGRpYW1vbmRzLCBzdXBlciBoZXJvZXMgQmlraW5pIEF2ZW5nZXIgYW5kIFRob25nIEdpcmwgbXVzdCBzdG9wIGhlciBiZWZvcmUgc2hlIHVzZXMgdGhlIGdlbXMgdG8gYnVpbGQgYSBkYW5nZXJvdXMgc2NpLWZpIHdlYXBvbi4iLCJyZWxlYXNlX2RhdGUiOiIyMDE1LTAyLTI0In0seyJwb3B1bGFyaXR5IjoxNS40NDcsInZvdGVfY291bnQiOjE4MSwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6Ilwvc01GeVlaUjlrcnFjUUM5OUc2am5iMTBadjRQLmpwZyIsImlkIjoxNDYxMSwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC96MVA0bWRpdGhMZWFyNUR1NDhqYnNJcjEyYjcuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVWx0aW1hdGUgQXZlbmdlcnMgMjogUmlzZSBvZiB0aGUgUGFudGhlciIsImdlbnJlX2lkcyI6WzI4LDEyLDE2LDg3OF0sInRpdGxlIjoiVWx0aW1hdGUgQXZlbmdlcnMgMjogUmlzZSBvZiB0aGUgUGFudGhlciIsInZvdGVfYXZlcmFnZSI6Ni42LCJvdmVydmlldyI6Ik15c3RlcmlvdXMgV2FrYW5kYSBsaWVzIGluIHRoZSBkYXJrZXN0IGhlYXJ0IG9mIEFmcmljYSwgdW5rbm93biB0byBtb3N0IG9mIHRoZSB3b3JsZC4gQW4gaXNvbGF0ZWQgbGFuZCBoaWRkZW4gYmVoaW5kIGNsb3NlZCBib3JkZXJzLCBmaWVyY2VseSBwcm90ZWN0ZWQgYnkgaXRzIHlvdW5nIGtpbmcgLSB0aGUgQmxhY2sgUGFudGhlci4gQnV0IHdoZW4gYnJ1dGFsIGFsaWVuIGludmFkZXJzIGF0dGFjaywgdGhlIHRocmVhdCBsZWF2ZXMgdGhlIEJsYWNrIFBhbnRoZXIgd2l0aCBubyBvcHRpb24gYnV0IHRvIGdvIGFnYWluc3QgdGhlIHNhY3JlZCBkZWNyZWVzIG9mIGhpcyBwZW9wbGUgYW5kIGFzayBmb3IgaGVscCBmcm9tIG91dHNpZGVycy4iLCJyZWxlYXNlX2RhdGUiOiIyMDA2LTA4LTA4In0seyJwb3B1bGFyaXR5Ijo4LjQ5Miwidm90ZV9jb3VudCI6MzksInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcL3hVQlpOb1k3aWRQZnFLWmVwbkRFdjdRYzhHQy5qcGciLCJpZCI6MzY4MzA0LCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcL3p2akJDOWd1SlZ3MzJiWnU0T0RwNnd6SjlWaS5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJMRUdPIE1hcnZlbCBTdXBlciBIZXJvZXM6IEF2ZW5nZXJzIFJlYXNzZW1ibGVkISIsImdlbnJlX2lkcyI6WzE2XSwidGl0bGUiOiJMRUdPIE1hcnZlbCBTdXBlciBIZXJvZXM6IEF2ZW5nZXJzIFJlYXNzZW1ibGVkISIsInZvdGVfYXZlcmFnZSI6Ni4yLCJvdmVydmlldyI6IkluIFwiTEVHTyBNYXJ2ZWwgU3VwZXIgSGVyb2VzOiBBdmVuZ2VycyBSZWFzc2VtYmxlZCEsXCIgdGhlIEF2ZW5nZXJzIHByZXBhcmUgZm9yIGEgcGFydHkgYXQgU3RhcmsgVG93ZXIgYW5kIG5vdGljZSB0aGF0IElyb24gTWFuIGlzIGFjdGluZyBzdHJhbmdlLiBBZnRlciBzb21lIGludmVzdGlnYXRpb24sIHRoZXkgZGlzY292ZXIgdGhhdCB0aGUgZXZpbCBVbHRyb24gaGFzIHRha2VuIGNvbnRyb2wgb2YgSXJvbiBNYW4gYW5kIGhpcyBhcm1vciBhcyBwYXJ0IG9mIGhpcyBzY2hlbWUgdG8gdGFrZSBvdmVyIHRoZSB3b3JsZC4gSXQncyB1cCB0byBDYXB0YWluIEFtZXJpY2EsIHRoZSBIdWxrLCBUaG9yLCBWaXNpb24sIEJsYWNrIFdpZG93LCBIYXdrZXllIGFuZCB0aGVpciBmcmllbmRzIChTcGlkZXItTWFuLCBJcm9uIFNwaWRlciwgYW5kIHNwZWNpYWwgZ3Vlc3Qgc3RhciBBbnQtTWFuKSB0byByZXNjdWUgSXJvbiBNYW4gZnJvbSBVbHRyb24ncyBjbHV0Y2hlcyBhbmQgZGVmZWF0IHRoZSBzdXBlciB2aWxsYWluIGJlZm9yZSBoZSBjYXVzZXMgZXZlbiBtb3JlIGRlc3RydWN0aW9uIGFuZCBjaGFvcy4iLCJyZWxlYXNlX2RhdGUiOiIyMDE1LTExLTE2In0seyJwb3B1bGFyaXR5IjoyLjQxNywidm90ZV9jb3VudCI6MSwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvNEwzYWpHUDNac25NOHhJclhqd0VaT0xZQmpiLmpwZyIsImlkIjoyMjMyOTEsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQWxpZW4gQXZlbmdlcnMgSUkiLCJnZW5yZV9pZHMiOlszNSw4NzgsMTA3NzBdLCJ0aXRsZSI6IkFsaWVuIEF2ZW5nZXJzIElJIiwidm90ZV9hdmVyYWdlIjoxMCwib3ZlcnZpZXciOiJXZWlyZCB0aGluZ3MgYXJlIGhhcHBlbmluZyBpbiB0aGUgdG93biBvZiBKdXN0aWNlLCBBcml6b25hOiB0aHJlZSBzaGVyaWZmcyBoYXZlIGRpc2FwcGVhcmVkLCBhbmQgc29tZW9uZSBpcyBraWxsaW5nIHRoZSByYW5jaGVyJ3MgbGl2ZXN0b2NrIGluIGEgYml6YXJyZSwgcml0dWFsaXN0aWMgZmFzaGlvbi4gTG9jYWxzIGJlbGlldmUgdGhlIGluY2lkZW50cyB3ZXJlIGNhdXNlZCBieSBhbGllbnMuLi5cciBCdXQgYSB2aXNpdGluZyBjb3VwbGUsIENoYXJsaWUgYW5kIFJob25kYSwga25vd3MgYmV0dGVyIOKAkyBiZWNhdXNlIHRoZXkncmUgYWxpZW5zIHRoZW1zZWx2ZXMuIFdoZW4gbm8gb25lIGVsc2Ugd2lsbCwgQ2hhcmxpZSBhbmQgUmhvbmRhIHZvbHVudGVlciB0byBiZSB0aGUgbmV3IHNoZXJpZmZzIHRvIGdldCB0byBib3R0b20gb2YgdGhlIGNyaW1lcy4gSGlkaW5nIGJlaGluZCB0aGUgcG93ZXIgb2YgdGhlIGJhZGdlLCB0aGUgdHdvIG1ha2UgdGhlaXIgb3duIHJ1bGVzLCBwdW5pc2hpbmcgd3JvbmctZG9lcnMgd2l0aCB0aGVpciBvd24gZm9ybSBvZiBcImV5ZS1mb3ItYW4tZXllXCIgYWxpZW4gdmVuZ2VhbmNlLlxyIEZvbGxvdyB0aGlzIHR3aXN0ZWQsIG91dGVyIHNwYWNlIFwiQm9ubmllIGFuZCBDbHlkZVwiIGFzIHRoZXkgYXR0ZW1wdCB0byBicmluZyBKdXN0aWNlIHRoZSBqdXN0aWNlIGl0IGRlc2VydmVzLiIsInJlbGVhc2VfZGF0ZSI6IjE5OTctMTAtMjUifSx7InBvcHVsYXJpdHkiOjQuMTk2LCJ2b3RlX2NvdW50Ijo2LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC95eW1zQ3dLUGJKSUYxeGNsMmloOGZsN094QWEuanBnIiwiaWQiOjUzODE1MywiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC9mWWN6SUNFWkFnbURoN2x2UVZsWTlvYmp0bEYuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQXZlbmdlcnMgb2YgSnVzdGljZTogRmFyY2UgV2FycyIsImdlbnJlX2lkcyI6WzM1LDE0XSwidGl0bGUiOiJBdmVuZ2VycyBvZiBKdXN0aWNlOiBGYXJjZSBXYXJzIiwidm90ZV9hdmVyYWdlIjo0LjcsIm92ZXJ2aWV3IjoiV2hpbGUgdHJ5aW5nIHRvIHJlbWFpbiBhIGdvb2QgaHVzYmFuZCBhbmQgZmF0aGVyLCBTdXBlcmJhdCBhbmQgdGhlIEF2ZW5nZXJzIG9mIEp1c3RpY2UgY29tZSBvdXQgb2YgcmV0aXJlbWVudCB0byBzdG9wIERhcmsgSm9rZXN0ZXIgYW5kIExpc3AgTHV0aG9yIGZyb20gZnJlZXppbmcgdGhlIHBsYW5ldC4iLCJyZWxlYXNlX2RhdGUiOiIyMDE4LTA3LTIwIn0seyJwb3B1bGFyaXR5IjoxLjc4NSwidm90ZV9jb3VudCI6MywidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvQWtkM0FxcnIycThQTEtPQ1BPa09uQjNBb0prLmpwZyIsImlkIjo1ODkwNiwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC9ib1g3RDJ3SHRmMDFDN0F6elB1VlpBemM3NHguanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQWxpZW4gQXZlbmdlcnMiLCJnZW5yZV9pZHMiOlszNSw4NzhdLCJ0aXRsZSI6IkFsaWVuIEF2ZW5nZXJzIiwidm90ZV9hdmVyYWdlIjo1LjMsIm92ZXJ2aWV3IjoiQ2hhcmxpZSBhbmQgUmhvbmRhIGFyZSBhIHN3ZWV0IGFuZCBjb21mb3J0YWJsZSBtYXJyaWVkIGNvdXBsZSBvbiB2YWNhdGlvbiB3aXRoIHRoZWlyIGxvdmVseSBkYXVnaHRlciBEYXBobmUuIFRoZXkgZmluZCBhIHJ1bmRvd24gYm9hcmRpbmcgaG91c2UgYW5kIGl0cyBoYWdnYXJkIG93bmVyLCBKb3NlcGgsIGFuIGV4LWNvbiB3aG9zZSBtb3RoZXIgaGFzIGp1c3QgZGllZCBhbmQgbGVmdCBoaW0gdGhlIGhvdXNlLiBIZSBkb2Vzbid0IGtub3cgd2h5IHRoaXMgY2hlZXJmdWwgY291cGxlIHdvdWxkIHdhbnQgdG8gdmFjYXRpb24gaW4gdGhlIHdvcnN0IHBhcnQgb2YgTG9zIEFuZ2VsZXMsIGJ1dCBoZSBkb2Vzbid0IGtub3cgdGhleSdyZSB2YWNhdGlvbmluZyBmcm9tIG91dGVyIHNwYWNlLCBhbmQgdGhlaXIgaWRlYSBvZiBmdW4gaXMgbXVyZGVyaW5nIGxvd2xpZmUgb3V0IG9uIHRoZSBzdHJlZXRzIiwicmVsZWFzZV9kYXRlIjoiMTk5Ni0wOC0wMyJ9LHsicG9wdWxhcml0eSI6MS4yNDEsInZvdGVfY291bnQiOjEsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOm51bGwsImlkIjo0MzI0MTMsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIEF2ZW5nZXJzIiwiZ2VucmVfaWRzIjpbMTJdLCJ0aXRsZSI6IlRoZSBBdmVuZ2VycyIsInZvdGVfYXZlcmFnZSI6MTAsIm92ZXJ2aWV3IjoiVGhlIGF0dHJhY3RpdmUgQXJnZW50aW5lIERvbiBDYXJlbGVzcyBpcyBhbiBhZHZlbnR1cmVyIGFuZCBhbiBleGNlbGxlbnQgc3dvcmRzbWFuLiBEb24gaXMgaW4gbG92ZSB3aXRoIE1hcmlhIE1vcmVubywgc2luY2UgaGUgaGFkIHRvIGVtZXJnZSBoZXIgamV3ZWxzIGFuZCBoYWQgdGhlcmVieSB0byBraWxsIGEgc2hhcmsuIERvbiB0cmllcyB0byBwcmV2ZW50IHRoZSBmb3JjZWQgbWFycmlhZ2Ugb2YgTWFyeSB3aXRoIHRoZSBydXRobGVzcyByZXZvbHV0aW9uYXJ5IENvbG9uZWwgTHVpcyBDb3JyYWwuIEFuIGFybWVkIGNsYXNoIGJldHdlZW4gRG9uIGFuZCBMdWlzIHNlZW1zIGluZXZpdGFibGUuIiwicmVsZWFzZV9kYXRlIjoiMTk1MC0wNi0xMCJ9LHsicG9wdWxhcml0eSI6My4xOTcsInZvdGVfY291bnQiOjE1LCJ2aWRlbyI6dHJ1ZSwicG9zdGVyX3BhdGgiOiJcLzJSRFVRcHpoSkhWek9ia0w0Wnh3SmtiS1lTei5qcGciLCJpZCI6NDQ4MzY2LCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJ1aWxkaW5nIHRoZSBEcmVhbTogQXNzZW1ibGluZyB0aGUgQXZlbmdlcnMiLCJnZW5yZV9pZHMiOls5OV0sInRpdGxlIjoiQnVpbGRpbmcgdGhlIERyZWFtOiBBc3NlbWJsaW5nIHRoZSBBdmVuZ2VycyIsInZvdGVfYXZlcmFnZSI6OC42LCJvdmVydmlldyI6IlRoaXMgOTAtbWludXRlIGZlYXR1cmUgd2lsbCBzaG93IGhvdyB0aGUgZmlsbXMgSXJvbiBNYW4sIFRoZSBJbmNyZWRpYmxlIEh1bGssIElyb24gTWFuIDIsIFRob3IsIGFuZCBDYXB0YWluIEFtZXJpY2E6IFRoZSBGaXJzdCBBdmVuZ2VyIHdlcmUgY29uY2VpdmVkIGFuZCBsZWQgdG8gdGhlIGdyZWF0ZXN0IHN1cGVyIGhlcm8gdGVhbSBldmVyIGFzc2VtYmxlZCBvbiBzY3JlZW4gVGhlIEF2ZW5nZXJzLiIsInJlbGVhc2VfZGF0ZSI6IjIwMTItMDktMjUifSx7InBvcHVsYXJpdHkiOjIuMTA3LCJpZCI6NDg3NTU1LCJ2aWRlbyI6ZmFsc2UsInZvdGVfY291bnQiOjEsInZvdGVfYXZlcmFnZSI6OCwidGl0bGUiOiJUaGUgQXZlbmdlcnM6IEVhcnRoJ3MgTWlnaHRpZXN0IEhlcm9lcyAtIFByZWx1ZGUiLCJyZWxlYXNlX2RhdGUiOiIyMDEwLTA5LTIyIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIEF2ZW5nZXJzOiBFYXJ0aCdzIE1pZ2h0aWVzdCBIZXJvZXMgLSBQcmVsdWRlIiwiZ2VucmVfaWRzIjpbMTYsMjhdLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJhZHVsdCI6ZmFsc2UsIm92ZXJ2aWV3IjoiQSAxMTAgbWludXRlIHByZWx1ZGUgdG8gdGhlIDIwMTAgYW5pbWF0ZWQgc2VyaWVzLCBjb25zaXN0aW5nIG9mIGZpdmUtYW5kLWEtaGFsZi1taW51dGUgY2hhcHRlcnMgY3JlYXRlZCBmcm9tIGZvb3RhZ2UgZnJvbSBzZWFzb24tb25lIGVwaXNvZGVzLCBwcmVtaWVyZWQgb25saW5lIGFuZCBvbiBEaXNuZXkgWEQgb24gU2VwdGVtYmVyIDIyLCAyMDEwLiBTZXJpZXMgc3VwZXJ2aXNpbmcgcHJvZHVjZXIgSm9zaCBGaW5lIHNhaWQgdGhlIGdvYWwgd2FzIHRvIFwibGV0IHVzIGV4cGxvcmUgdGhlIGluZGl2aWR1YWwgbWVtYmVycyBvZiB0aGUgdGVhbSBpbiB0aGVpciBvd24gb25nb2luZyBhZHZlbnR1cmVzIC4uLiBkbyBhIGxvdCBvZiBjaGFyYWN0ZXIgZGV2ZWxvcG1lbnQgYW5kIHNldCB0aGUgc3RhZ2UgZm9yIHRoZSByZXN0IG9mIHRoZSBzZWFzb25cIi4iLCJwb3N0ZXJfcGF0aCI6IlwvM283TXBPYURrZUFjdnhxRWpnYkljWHJjZXBCLmpwZyJ9LHsicG9wdWxhcml0eSI6MS4xMjYsImlkIjozNzczNjQsInZpZGVvIjpmYWxzZSwidm90ZV9jb3VudCI6MCwidm90ZV9hdmVyYWdlIjowLCJ0aXRsZSI6Ikxlc2JpYW4gQXZlbmdlcnMgRWF0IEZpcmUgVG9vIiwicmVsZWFzZV9kYXRlIjoiMTk5My0wMS0wMSIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6Ikxlc2JpYW4gQXZlbmdlcnMgRWF0IEZpcmUgVG9vIiwiZ2VucmVfaWRzIjpbOTldLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJhZHVsdCI6ZmFsc2UsIm92ZXJ2aWV3IjoiQW4gaW5zaWRlcidzIGxvb2sgYXQgdGhlIGZpcnN0IHllYXIgb2YgYW4gYWN0aXZpc3QgZ3JvdXAga25vd24gYXMgdGhlIExlc2JpYW4gQXZlbmdlcnMuIiwicG9zdGVyX3BhdGgiOiJcLzUxVExMM2ZrVXJNOGliNExtVldpZ0Q2bUI3cy5qcGcifSx7InBvcHVsYXJpdHkiOjAuNiwidm90ZV9jb3VudCI6MCwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6bnVsbCwiaWQiOjY0ODQxNiwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJOZXcgQXZlbmdlcnMiLCJnZW5yZV9pZHMiOltdLCJ0aXRsZSI6Ik5ldyBBdmVuZ2VycyIsInZvdGVfYXZlcmFnZSI6MCwib3ZlcnZpZXciOiJXaGVuIEthbmcgdGhyZWF0ZW5zIHRoZSB0aW1lbGluZSBvZiB5b3VuZyBoZXJvZXMsIG11Y2ggbGllcyBhaGVhZCIsInJlbGVhc2VfZGF0ZSI6IiJ9XX0=
  recorded_at: Tue, 25 Aug 2020 21:47:57 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=SECRET_TMDB_API_KEY&page=2&query=Avengers
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Content-Type:
      - application/json
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 25 Aug 2020 21:47:57 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 23241b9c368643949e3bb1a1ba4e97c3.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - WT9ELtCTb54KOBxLXl_sTxBgf0avIkKZd62pWIcVaYOUolyDfghW1w==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 25 Aug 2020 21:47:57 GMT
recorded_with: VCR 6.0.0
