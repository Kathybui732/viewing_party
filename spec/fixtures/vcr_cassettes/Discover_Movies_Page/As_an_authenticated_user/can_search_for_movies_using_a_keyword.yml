---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=SECRET_TMDB_API_KEY&page=1&query=Avengers
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Content-Type:
      - application/json
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 24 Aug 2020 21:39:10 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 1e5c934b70471a41d2b61ae8c4abeb79.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - IRXvn0oF8FxUfoMLXoFU2etH1wyfRqEd6oWitroraInbsUwM5W1E9w==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxLCJ0b3RhbF9yZXN1bHRzIjo0OCwidG90YWxfcGFnZXMiOjMsInJlc3VsdHMiOlt7InBvcHVsYXJpdHkiOjEwMy4zMjcsInZvdGVfY291bnQiOjE5NDAwLCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC83V3N5Q2hRTEVmdEZpRE9WVEdrdjNoRnB5eXQuanBnIiwiaWQiOjI5OTUzNiwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC9iT0drZ1JHZGhyQllKU0xwWGF4aFhWc3RkZFYuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQXZlbmdlcnM6IEluZmluaXR5IFdhciIsImdlbnJlX2lkcyI6WzI4LDEyLDg3OF0sInRpdGxlIjoiQXZlbmdlcnM6IEluZmluaXR5IFdhciIsInZvdGVfYXZlcmFnZSI6OC4zLCJvdmVydmlldyI6IkFzIHRoZSBBdmVuZ2VycyBhbmQgdGhlaXIgYWxsaWVzIGhhdmUgY29udGludWVkIHRvIHByb3RlY3QgdGhlIHdvcmxkIGZyb20gdGhyZWF0cyB0b28gbGFyZ2UgZm9yIGFueSBvbmUgaGVybyB0byBoYW5kbGUsIGEgbmV3IGRhbmdlciBoYXMgZW1lcmdlZCBmcm9tIHRoZSBjb3NtaWMgc2hhZG93czogVGhhbm9zLiBBIGRlc3BvdCBvZiBpbnRlcmdhbGFjdGljIGluZmFteSwgaGlzIGdvYWwgaXMgdG8gY29sbGVjdCBhbGwgc2l4IEluZmluaXR5IFN0b25lcywgYXJ0aWZhY3RzIG9mIHVuaW1hZ2luYWJsZSBwb3dlciwgYW5kIHVzZSB0aGVtIHRvIGluZmxpY3QgaGlzIHR3aXN0ZWQgd2lsbCBvbiBhbGwgb2YgcmVhbGl0eS4gRXZlcnl0aGluZyB0aGUgQXZlbmdlcnMgaGF2ZSBmb3VnaHQgZm9yIGhhcyBsZWQgdXAgdG8gdGhpcyBtb21lbnQgLSB0aGUgZmF0ZSBvZiBFYXJ0aCBhbmQgZXhpc3RlbmNlIGl0c2VsZiBoYXMgbmV2ZXIgYmVlbiBtb3JlIHVuY2VydGFpbi4iLCJyZWxlYXNlX2RhdGUiOiIyMDE4LTA0LTI1In0seyJwb3B1bGFyaXR5Ijo0OS43MzksInZvdGVfY291bnQiOjE0NjgzLCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC9vcjA2Rk4zRGthNXR1a0sxZTlzbDE2cEIzaXkuanBnIiwiaWQiOjI5OTUzNCwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC9vcmppQjNvVUlzeXo2MGhvRXFraUdweTVDZU8uanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQXZlbmdlcnM6IEVuZGdhbWUiLCJnZW5yZV9pZHMiOlsyOCwxMiw4NzhdLCJ0aXRsZSI6IkF2ZW5nZXJzOiBFbmRnYW1lIiwidm90ZV9hdmVyYWdlIjo4LjMsIm92ZXJ2aWV3IjoiQWZ0ZXIgdGhlIGRldmFzdGF0aW5nIGV2ZW50cyBvZiBBdmVuZ2VyczogSW5maW5pdHkgV2FyLCB0aGUgdW5pdmVyc2UgaXMgaW4gcnVpbnMgZHVlIHRvIHRoZSBlZmZvcnRzIG9mIHRoZSBNYWQgVGl0YW4sIFRoYW5vcy4gV2l0aCB0aGUgaGVscCBvZiByZW1haW5pbmcgYWxsaWVzLCB0aGUgQXZlbmdlcnMgbXVzdCBhc3NlbWJsZSBvbmNlIG1vcmUgaW4gb3JkZXIgdG8gdW5kbyBUaGFub3MnIGFjdGlvbnMgYW5kIHJlc3RvcmUgb3JkZXIgdG8gdGhlIHVuaXZlcnNlIG9uY2UgYW5kIGZvciBhbGwsIG5vIG1hdHRlciB3aGF0IGNvbnNlcXVlbmNlcyBtYXkgYmUgaW4gc3RvcmUuIiwicmVsZWFzZV9kYXRlIjoiMjAxOS0wNC0yNCJ9LHsicG9wdWxhcml0eSI6OTAuMjE4LCJ2b3RlX2NvdW50IjoxNjM2MCwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvNHNzRHV2RURrU0FyV0VkeUJsMlg1RUh2WUtVLmpwZyIsImlkIjo5OTg2MSwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC84aTZaRGs5N1Z5aDBqSG9oTUc0dkZlRnVLSmguanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQXZlbmdlcnM6IEFnZSBvZiBVbHRyb24iLCJnZW5yZV9pZHMiOlsyOCwxMiw4NzhdLCJ0aXRsZSI6IkF2ZW5nZXJzOiBBZ2Ugb2YgVWx0cm9uIiwidm90ZV9hdmVyYWdlIjo3LjMsIm92ZXJ2aWV3IjoiV2hlbiBUb255IFN0YXJrIHRyaWVzIHRvIGp1bXBzdGFydCBhIGRvcm1hbnQgcGVhY2VrZWVwaW5nIHByb2dyYW0sIHRoaW5ncyBnbyBhd3J5IGFuZCBFYXJ0aOKAmXMgTWlnaHRpZXN0IEhlcm9lcyBhcmUgcHV0IHRvIHRoZSB1bHRpbWF0ZSB0ZXN0IGFzIHRoZSBmYXRlIG9mIHRoZSBwbGFuZXQgaGFuZ3MgaW4gdGhlIGJhbGFuY2UuIEFzIHRoZSB2aWxsYWlub3VzIFVsdHJvbiBlbWVyZ2VzLCBpdCBpcyB1cCB0byBUaGUgQXZlbmdlcnMgdG8gc3RvcCBoaW0gZnJvbSBlbmFjdGluZyBoaXMgdGVycmlibGUgcGxhbnMsIGFuZCBzb29uIHVuZWFzeSBhbGxpYW5jZXMgYW5kIHVuZXhwZWN0ZWQgYWN0aW9uIHBhdmUgdGhlIHdheSBmb3IgYW4gZXBpYyBhbmQgdW5pcXVlIGdsb2JhbCBhZHZlbnR1cmUuIiwicmVsZWFzZV9kYXRlIjoiMjAxNS0wNC0yMiJ9LHsicG9wdWxhcml0eSI6MzguNDIzLCJ2b3RlX2NvdW50IjoyMjk3OSwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvUllNWDJ3Y0tDQkFyMjRVeVBEN3h3bWphVG4uanBnIiwiaWQiOjI0NDI4LCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcL2t3VVFGZUZYT09wZ2xvTWdaYWFkaHprYlRJNC5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgQXZlbmdlcnMiLCJnZW5yZV9pZHMiOlsyOCwxMiw4NzhdLCJ0aXRsZSI6IlRoZSBBdmVuZ2VycyIsInZvdGVfYXZlcmFnZSI6Ny43LCJvdmVydmlldyI6IldoZW4gYW4gdW5leHBlY3RlZCBlbmVteSBlbWVyZ2VzIGFuZCB0aHJlYXRlbnMgZ2xvYmFsIHNhZmV0eSBhbmQgc2VjdXJpdHksIE5pY2sgRnVyeSwgZGlyZWN0b3Igb2YgdGhlIGludGVybmF0aW9uYWwgcGVhY2VrZWVwaW5nIGFnZW5jeSBrbm93biBhcyBTLkguSS5FLkwuRC4sIGZpbmRzIGhpbXNlbGYgaW4gbmVlZCBvZiBhIHRlYW0gdG8gcHVsbCB0aGUgd29ybGQgYmFjayBmcm9tIHRoZSBicmluayBvZiBkaXNhc3Rlci4gU3Bhbm5pbmcgdGhlIGdsb2JlLCBhIGRhcmluZyByZWNydWl0bWVudCBlZmZvcnQgYmVnaW5zISIsInJlbGVhc2VfZGF0ZSI6IjIwMTItMDQtMjUifSx7InBvcHVsYXJpdHkiOjExLjk5Nywidm90ZV9jb3VudCI6NzEsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcLzFTYkJLQ2JuVUxBQ09xV0tON2VMZlR1MWdWbS5qcGciLCJpZCI6MzIzNjYwLCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcL3R1aTlaMlFFb1pTSVBaTWZwdlBjTlA5SElvQS5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJBdmVuZ2VycyBHcmltbSIsImdlbnJlX2lkcyI6WzI4LDE0XSwidGl0bGUiOiJBdmVuZ2VycyBHcmltbSIsInZvdGVfYXZlcmFnZSI6NCwib3ZlcnZpZXciOiJXaGVuIFJ1bXBlbHN0aWx0c2tpbiBkZXN0cm95cyB0aGUgTWFnaWMgTWlycm9yIGFuZCBlc2NhcGVzIHRvIHRoZSBtb2Rlcm4gd29ybGQsIHRoZSBmb3VyIHByaW5jZXNzZXMgb2YgXCJPbmNlIFVwb24gYSBUaW1lXCItQ2luZGVyZWxsYSwgU2xlZXBpbmcgQmVhdXR5LCBTbm93IFdoaXRlLCBhbmQgUmFwdW56ZWwtYXJlIHN1Y2tlZCB0aHJvdWdoIHRoZSBwb3J0YWwgdG9vLiBXZWxsLXRyYWluZWQgYW5kIGVuZG93ZWQgd2l0aCBtYWdpY2FsIHBvd2VycywgdGhlIGZvdXIgd29tZW4gbXVzdCBmaWdodCBSdW1wZWxzdGlsdHNraW4gYW5kIGhpcyBhcm15IG9mIHRocmFsbHMgYmVmb3JlIGhlIGVuc2xhdmVzIGV2ZXJ5b25lIG9uIEVhcnRoLiIsInJlbGVhc2VfZGF0ZSI6IjIwMTUtMDMtMTcifSx7InBvcHVsYXJpdHkiOjExLjU4OCwidm90ZV9jb3VudCI6NDM2LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC8xcDV0aHlRNHBDeTg3NkhwZHZGQVJxSjYyTjkuanBnIiwiaWQiOjkzMjAsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6IlwvZnJ5ZW45Zm5qbG0wWWliS1RETkd6V05CT1NvLmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBBdmVuZ2VycyIsImdlbnJlX2lkcyI6Wzg3OCw1M10sInRpdGxlIjoiVGhlIEF2ZW5nZXJzIiwidm90ZV9hdmVyYWdlIjo0LjMsIm92ZXJ2aWV3IjoiQnJpdGlzaCBNaW5pc3RyeSBhZ2VudCBKb2huIFN0ZWVkLCB1bmRlciBkaXJlY3Rpb24gZnJvbSBcIk1vdGhlclwiLCBpbnZlc3RpZ2F0ZXMgYSBkaWFib2xpY2FsIHBsb3QgYnkgYXJjaC12aWxsYWluIFNpciBBdWd1c3QgZGUgV3ludGVyIHRvIHJ1bGUgdGhlIHdvcmxkIHdpdGggaGlzIHdlYXRoZXIgY29udHJvbCBtYWNoaW5lLiBTdGVlZCBpbnZlc3RpZ2F0ZXMgdGhlIGJlYXV0aWZ1bCBEb2N0b3IgTXJzLiBFbW1hIFBlZWwsIHRoZSBvbmx5IHN1c3BlY3QsIGJ1dCBzaW11bHRhbmVvdXNseSBmYWxscyBmb3IgaGVyIGFuZCBqb2lucyBmb3JjZXMgd2l0aCBoZXIgdG8gY29tYmF0IFNpciBBdWd1c3QuIiwicmVsZWFzZV9kYXRlIjoiMTk5OC0wOC0xMyJ9LHsicG9wdWxhcml0eSI6MTIuNjg5LCJ2b3RlX2NvdW50IjoyMTEsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcL2lNQ2tHSFZyWVJkcUtST1BSUG1WYUpWU2xnMy5qcGciLCJpZCI6MTQ2MDksImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6IlwvcDV1VFpIclh3V1gwajlkWVpLOHl4MjJzTzdULmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlVsdGltYXRlIEF2ZW5nZXJzOiBUaGUgTW92aWUiLCJnZW5yZV9pZHMiOlsyOCwxMiwxNiw4NzhdLCJ0aXRsZSI6IlVsdGltYXRlIEF2ZW5nZXJzOiBUaGUgTW92aWUiLCJ2b3RlX2F2ZXJhZ2UiOjYuNiwib3ZlcnZpZXciOiJXaGVuIGEgbnVjbGVhciBtaXNzaWxlIHdhcyBmaXJlZCBhdCBXYXNoaW5ndG9uIGluIDE5NDUsIENhcHRhaW4gQW1lcmljYSBtYW5hZ2VkIHRvIGRldG9uYXRlIGl0IGluIHRoZSB1cHBlciBhdG1vc3BoZXJlLiBCdXQgdGhlbiBoZSBmZWxsIG1pbGVzIGludG8gdGhlIGljeSBkZXB0aHMgb2YgdGhlIE5vcnRoIEF0bGFudGljLCB3aGVyZSBoZSByZW1haW5lZCBsb3N0IGZvciBvdmVyIHNpeHR5IHllYXJzLiBCdXQgbm93LCB3aXRoIHRoZSB3b3JsZCBmYWNpbmcgdGhlIHZlcnkgc2FtZSBldmlsLCBDYXB0YWluIEFtZXJpY2EgbXVzdCByaXNlIGFnYWluIGFzIG91ciBsYXN0IGhvcGUgZm9yIHN1cnZpdmFsLiIsInJlbGVhc2VfZGF0ZSI6IjIwMDYtMDItMjEifSx7InBvcHVsYXJpdHkiOjkuNDQsInZvdGVfY291bnQiOjM1LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC94ZkFjdTc0RFJRWGVNOVhxRmNFNU1yU1J6WVAuanBnIiwiaWQiOjUyMTcyMCwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC9tZFNyeE1nNGw2YTc2QUZvQldtdTdRMVg0UnQuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQXZlbmdlcnMgR3JpbW06IFRpbWUgV2FycyIsImdlbnJlX2lkcyI6WzI4LDEyLDE0XSwidGl0bGUiOiJBdmVuZ2VycyBHcmltbTogVGltZSBXYXJzIiwidm90ZV9hdmVyYWdlIjo0LjYsIm92ZXJ2aWV3IjoiV2hlbiBSdW1wZWxzdGlsdHNraW4gdHJpZXMgdG8gdGFrZSBvdmVyIEVhcnRoIG9uY2UgYW5kIGZvciBhbGwsIFRoZSBBdmVuZ2VycyBHcmltbSBtdXN0IHRyYWNrIGhpbSBkb3duIHRocm91Z2ggdGltZSBpbiBvcmRlciB0byBkZWZlYXQgaGltLiIsInJlbGVhc2VfZGF0ZSI6IjIwMTgtMDUtMDEifSx7InBvcHVsYXJpdHkiOjExLjg5NCwidm90ZV9jb3VudCI6MTI4LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC9mcEcxTkRiY0xWMmE3YzhYN0xDNEZQSVNCVDcuanBnIiwiaWQiOjE0NjEzLCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcLzhOOTF1WXdycjF1ZXBFS2JteW0xdGdmWGx6Uy5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJOZXh0IEF2ZW5nZXJzOiBIZXJvZXMgb2YgVG9tb3Jyb3ciLCJnZW5yZV9pZHMiOlsxNiwxMDc1MV0sInRpdGxlIjoiTmV4dCBBdmVuZ2VyczogSGVyb2VzIG9mIFRvbW9ycm93Iiwidm90ZV9hdmVyYWdlIjo2LjcsIm92ZXJ2aWV3IjoiVGhlIGNoaWxkcmVuIG9mIHRoZSBBdmVuZ2VycyBob25lIHRoZWlyIHBvd2VycyBhbmQgZ28gaGVhZCB0byBoZWFkIHdpdGggdGhlIHZlcnkgZW5lbXkgcmVzcG9uc2libGUgZm9yIHRoZWlyIHBhcmVudHMnIGRlbWlzZS4iLCJyZWxlYXNlX2RhdGUiOiIyMDA4LTA5LTAyIn0seyJwb3B1bGFyaXR5Ijo2LjM2NCwidm90ZV9jb3VudCI6MTAsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcL2VoVFlXdVBLd2w4c1hQWDBJNkxudkpVRGFWbC5qcGciLCJpZCI6MzQ3MTU4LCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJpa2luaSBBdmVuZ2VycyIsImdlbnJlX2lkcyI6WzM1XSwidGl0bGUiOiJCaWtpbmkgQXZlbmdlcnMiLCJ2b3RlX2F2ZXJhZ2UiOjUuNywib3ZlcnZpZXciOiJXaGVuIHRoZSBKYWRlIEVtcHJlc3Mgc3RlYWxzIHRoZSB3b3JsZCdzIGxhcmdlc3QgZGlhbW9uZHMsIHN1cGVyIGhlcm9lcyBCaWtpbmkgQXZlbmdlciBhbmQgVGhvbmcgR2lybCBtdXN0IHN0b3AgaGVyIGJlZm9yZSBzaGUgdXNlcyB0aGUgZ2VtcyB0byBidWlsZCBhIGRhbmdlcm91cyBzY2ktZmkgd2VhcG9uLiIsInJlbGVhc2VfZGF0ZSI6IjIwMTUtMDItMjQifSx7InBvcHVsYXJpdHkiOjExLjk2OSwidm90ZV9jb3VudCI6MTc5LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC9zTUZ5WVpSOWtycWNRQzk5RzZqbmIxMFp2NFAuanBnIiwiaWQiOjE0NjExLCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcL3oxUDRtZGl0aExlYXI1RHU0OGpic0lyMTJiNy5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJVbHRpbWF0ZSBBdmVuZ2VycyAyOiBSaXNlIG9mIHRoZSBQYW50aGVyIiwiZ2VucmVfaWRzIjpbMjgsMTIsMTYsODc4XSwidGl0bGUiOiJVbHRpbWF0ZSBBdmVuZ2VycyAyOiBSaXNlIG9mIHRoZSBQYW50aGVyIiwidm90ZV9hdmVyYWdlIjo2LjYsIm92ZXJ2aWV3IjoiTXlzdGVyaW91cyBXYWthbmRhIGxpZXMgaW4gdGhlIGRhcmtlc3QgaGVhcnQgb2YgQWZyaWNhLCB1bmtub3duIHRvIG1vc3Qgb2YgdGhlIHdvcmxkLiBBbiBpc29sYXRlZCBsYW5kIGhpZGRlbiBiZWhpbmQgY2xvc2VkIGJvcmRlcnMsIGZpZXJjZWx5IHByb3RlY3RlZCBieSBpdHMgeW91bmcga2luZyAtIHRoZSBCbGFjayBQYW50aGVyLiBCdXQgd2hlbiBicnV0YWwgYWxpZW4gaW52YWRlcnMgYXR0YWNrLCB0aGUgdGhyZWF0IGxlYXZlcyB0aGUgQmxhY2sgUGFudGhlciB3aXRoIG5vIG9wdGlvbiBidXQgdG8gZ28gYWdhaW5zdCB0aGUgc2FjcmVkIGRlY3JlZXMgb2YgaGlzIHBlb3BsZSBhbmQgYXNrIGZvciBoZWxwIGZyb20gb3V0c2lkZXJzLiIsInJlbGVhc2VfZGF0ZSI6IjIwMDYtMDgtMDgifSx7InBvcHVsYXJpdHkiOjguNzUsInZvdGVfY291bnQiOjM5LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC94VUJaTm9ZN2lkUGZxS1plcG5ERXY3UWM4R0MuanBnIiwiaWQiOjM2ODMwNCwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC96dmpCQzlndUpWdzMyYlp1NE9EcDZ3eko5VmkuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiTEVHTyBNYXJ2ZWwgU3VwZXIgSGVyb2VzOiBBdmVuZ2VycyBSZWFzc2VtYmxlZCEiLCJnZW5yZV9pZHMiOlsxNl0sInRpdGxlIjoiTEVHTyBNYXJ2ZWwgU3VwZXIgSGVyb2VzOiBBdmVuZ2VycyBSZWFzc2VtYmxlZCEiLCJ2b3RlX2F2ZXJhZ2UiOjYuMiwib3ZlcnZpZXciOiJJbiBcIkxFR08gTWFydmVsIFN1cGVyIEhlcm9lczogQXZlbmdlcnMgUmVhc3NlbWJsZWQhLFwiIHRoZSBBdmVuZ2VycyBwcmVwYXJlIGZvciBhIHBhcnR5IGF0IFN0YXJrIFRvd2VyIGFuZCBub3RpY2UgdGhhdCBJcm9uIE1hbiBpcyBhY3Rpbmcgc3RyYW5nZS4gQWZ0ZXIgc29tZSBpbnZlc3RpZ2F0aW9uLCB0aGV5IGRpc2NvdmVyIHRoYXQgdGhlIGV2aWwgVWx0cm9uIGhhcyB0YWtlbiBjb250cm9sIG9mIElyb24gTWFuIGFuZCBoaXMgYXJtb3IgYXMgcGFydCBvZiBoaXMgc2NoZW1lIHRvIHRha2Ugb3ZlciB0aGUgd29ybGQuIEl0J3MgdXAgdG8gQ2FwdGFpbiBBbWVyaWNhLCB0aGUgSHVsaywgVGhvciwgVmlzaW9uLCBCbGFjayBXaWRvdywgSGF3a2V5ZSBhbmQgdGhlaXIgZnJpZW5kcyAoU3BpZGVyLU1hbiwgSXJvbiBTcGlkZXIsIGFuZCBzcGVjaWFsIGd1ZXN0IHN0YXIgQW50LU1hbikgdG8gcmVzY3VlIElyb24gTWFuIGZyb20gVWx0cm9uJ3MgY2x1dGNoZXMgYW5kIGRlZmVhdCB0aGUgc3VwZXIgdmlsbGFpbiBiZWZvcmUgaGUgY2F1c2VzIGV2ZW4gbW9yZSBkZXN0cnVjdGlvbiBhbmQgY2hhb3MuIiwicmVsZWFzZV9kYXRlIjoiMjAxNS0xMS0xNiJ9LHsicG9wdWxhcml0eSI6Mi45NTksInZvdGVfY291bnQiOjMsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcL0FrZDNBcXJyMnE4UExLT0NQT2tPbkIzQW9Kay5qcGciLCJpZCI6NTg5MDYsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6IlwvYm9YN0Qyd0h0ZjAxQzdBenpQdVZaQXpjNzR4LmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkFsaWVuIEF2ZW5nZXJzIiwiZ2VucmVfaWRzIjpbMzUsODc4XSwidGl0bGUiOiJBbGllbiBBdmVuZ2VycyIsInZvdGVfYXZlcmFnZSI6NS4zLCJvdmVydmlldyI6IkNoYXJsaWUgYW5kIFJob25kYSBhcmUgYSBzd2VldCBhbmQgY29tZm9ydGFibGUgbWFycmllZCBjb3VwbGUgb24gdmFjYXRpb24gd2l0aCB0aGVpciBsb3ZlbHkgZGF1Z2h0ZXIgRGFwaG5lLiBUaGV5IGZpbmQgYSBydW5kb3duIGJvYXJkaW5nIGhvdXNlIGFuZCBpdHMgaGFnZ2FyZCBvd25lciwgSm9zZXBoLCBhbiBleC1jb24gd2hvc2UgbW90aGVyIGhhcyBqdXN0IGRpZWQgYW5kIGxlZnQgaGltIHRoZSBob3VzZS4gSGUgZG9lc24ndCBrbm93IHdoeSB0aGlzIGNoZWVyZnVsIGNvdXBsZSB3b3VsZCB3YW50IHRvIHZhY2F0aW9uIGluIHRoZSB3b3JzdCBwYXJ0IG9mIExvcyBBbmdlbGVzLCBidXQgaGUgZG9lc24ndCBrbm93IHRoZXkncmUgdmFjYXRpb25pbmcgZnJvbSBvdXRlciBzcGFjZSwgYW5kIHRoZWlyIGlkZWEgb2YgZnVuIGlzIG11cmRlcmluZyBsb3dsaWZlIG91dCBvbiB0aGUgc3RyZWV0cyIsInJlbGVhc2VfZGF0ZSI6IjE5OTYtMDgtMDMifSx7InBvcHVsYXJpdHkiOjIuNTcsInZvdGVfY291bnQiOjEsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcLzRMM2FqR1AzWnNuTTh4SXJYandFWk9MWUJqYi5qcGciLCJpZCI6MjIzMjkxLCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkFsaWVuIEF2ZW5nZXJzIElJIiwiZ2VucmVfaWRzIjpbMzUsODc4LDEwNzcwXSwidGl0bGUiOiJBbGllbiBBdmVuZ2VycyBJSSIsInZvdGVfYXZlcmFnZSI6MTAsIm92ZXJ2aWV3IjoiV2VpcmQgdGhpbmdzIGFyZSBoYXBwZW5pbmcgaW4gdGhlIHRvd24gb2YgSnVzdGljZSwgQXJpem9uYTogdGhyZWUgc2hlcmlmZnMgaGF2ZSBkaXNhcHBlYXJlZCwgYW5kIHNvbWVvbmUgaXMga2lsbGluZyB0aGUgcmFuY2hlcidzIGxpdmVzdG9jayBpbiBhIGJpemFycmUsIHJpdHVhbGlzdGljIGZhc2hpb24uIExvY2FscyBiZWxpZXZlIHRoZSBpbmNpZGVudHMgd2VyZSBjYXVzZWQgYnkgYWxpZW5zLi4uXHIgQnV0IGEgdmlzaXRpbmcgY291cGxlLCBDaGFybGllIGFuZCBSaG9uZGEsIGtub3dzIGJldHRlciDigJMgYmVjYXVzZSB0aGV5J3JlIGFsaWVucyB0aGVtc2VsdmVzLiBXaGVuIG5vIG9uZSBlbHNlIHdpbGwsIENoYXJsaWUgYW5kIFJob25kYSB2b2x1bnRlZXIgdG8gYmUgdGhlIG5ldyBzaGVyaWZmcyB0byBnZXQgdG8gYm90dG9tIG9mIHRoZSBjcmltZXMuIEhpZGluZyBiZWhpbmQgdGhlIHBvd2VyIG9mIHRoZSBiYWRnZSwgdGhlIHR3byBtYWtlIHRoZWlyIG93biBydWxlcywgcHVuaXNoaW5nIHdyb25nLWRvZXJzIHdpdGggdGhlaXIgb3duIGZvcm0gb2YgXCJleWUtZm9yLWFuLWV5ZVwiIGFsaWVuIHZlbmdlYW5jZS5cciBGb2xsb3cgdGhpcyB0d2lzdGVkLCBvdXRlciBzcGFjZSBcIkJvbm5pZSBhbmQgQ2x5ZGVcIiBhcyB0aGV5IGF0dGVtcHQgdG8gYnJpbmcgSnVzdGljZSB0aGUganVzdGljZSBpdCBkZXNlcnZlcy4iLCJyZWxlYXNlX2RhdGUiOiIxOTk3LTEwLTI1In0seyJwb3B1bGFyaXR5Ijo0Ljk1Miwidm90ZV9jb3VudCI6NiwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwveXltc0N3S1BiSklGMXhjbDJpaDhmbDdPeEFhLmpwZyIsImlkIjo1MzgxNTMsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6IlwvZlljeklDRVpBZ21EaDdsdlFWbFk5b2JqdGxGLmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkF2ZW5nZXJzIG9mIEp1c3RpY2U6IEZhcmNlIFdhcnMiLCJnZW5yZV9pZHMiOlszNSwxNF0sInRpdGxlIjoiQXZlbmdlcnMgb2YgSnVzdGljZTogRmFyY2UgV2FycyIsInZvdGVfYXZlcmFnZSI6NC43LCJvdmVydmlldyI6IldoaWxlIHRyeWluZyB0byByZW1haW4gYSBnb29kIGh1c2JhbmQgYW5kIGZhdGhlciwgU3VwZXJiYXQgYW5kIHRoZSBBdmVuZ2VycyBvZiBKdXN0aWNlIGNvbWUgb3V0IG9mIHJldGlyZW1lbnQgdG8gc3RvcCBEYXJrIEpva2VzdGVyIGFuZCBMaXNwIEx1dGhvciBmcm9tIGZyZWV6aW5nIHRoZSBwbGFuZXQuIiwicmVsZWFzZV9kYXRlIjoiMjAxOC0wNy0yMCJ9LHsicG9wdWxhcml0eSI6MS40LCJ2b3RlX2NvdW50IjoxLCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjpudWxsLCJpZCI6NDMyNDEzLCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBBdmVuZ2VycyIsImdlbnJlX2lkcyI6WzEyXSwidGl0bGUiOiJUaGUgQXZlbmdlcnMiLCJ2b3RlX2F2ZXJhZ2UiOjEwLCJvdmVydmlldyI6IlRoZSBhdHRyYWN0aXZlIEFyZ2VudGluZSBEb24gQ2FyZWxlc3MgaXMgYW4gYWR2ZW50dXJlciBhbmQgYW4gZXhjZWxsZW50IHN3b3Jkc21hbi4gRG9uIGlzIGluIGxvdmUgd2l0aCBNYXJpYSBNb3Jlbm8sIHNpbmNlIGhlIGhhZCB0byBlbWVyZ2UgaGVyIGpld2VscyBhbmQgaGFkIHRoZXJlYnkgdG8ga2lsbCBhIHNoYXJrLiBEb24gdHJpZXMgdG8gcHJldmVudCB0aGUgZm9yY2VkIG1hcnJpYWdlIG9mIE1hcnkgd2l0aCB0aGUgcnV0aGxlc3MgcmV2b2x1dGlvbmFyeSBDb2xvbmVsIEx1aXMgQ29ycmFsLiBBbiBhcm1lZCBjbGFzaCBiZXR3ZWVuIERvbiBhbmQgTHVpcyBzZWVtcyBpbmV2aXRhYmxlLiIsInJlbGVhc2VfZGF0ZSI6IjE5NTAtMDYtMTAifSx7InBvcHVsYXJpdHkiOjMuMjc5LCJ2b3RlX2NvdW50IjoxNSwidmlkZW8iOnRydWUsInBvc3Rlcl9wYXRoIjoiXC8yUkRVUXB6aEpIVnpPYmtMNFp4d0prYktZU3ouanBnIiwiaWQiOjQ0ODM2NiwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJCdWlsZGluZyB0aGUgRHJlYW06IEFzc2VtYmxpbmcgdGhlIEF2ZW5nZXJzIiwiZ2VucmVfaWRzIjpbOTldLCJ0aXRsZSI6IkJ1aWxkaW5nIHRoZSBEcmVhbTogQXNzZW1ibGluZyB0aGUgQXZlbmdlcnMiLCJ2b3RlX2F2ZXJhZ2UiOjguNiwib3ZlcnZpZXciOiJUaGlzIDkwLW1pbnV0ZSBmZWF0dXJlIHdpbGwgc2hvdyBob3cgdGhlIGZpbG1zIElyb24gTWFuLCBUaGUgSW5jcmVkaWJsZSBIdWxrLCBJcm9uIE1hbiAyLCBUaG9yLCBhbmQgQ2FwdGFpbiBBbWVyaWNhOiBUaGUgRmlyc3QgQXZlbmdlciB3ZXJlIGNvbmNlaXZlZCBhbmQgbGVkIHRvIHRoZSBncmVhdGVzdCBzdXBlciBoZXJvIHRlYW0gZXZlciBhc3NlbWJsZWQgb24gc2NyZWVuIFRoZSBBdmVuZ2Vycy4iLCJyZWxlYXNlX2RhdGUiOiIyMDEyLTA5LTI1In0seyJwb3B1bGFyaXR5IjoyLjE1NCwiaWQiOjQ4NzU1NSwidmlkZW8iOmZhbHNlLCJ2b3RlX2NvdW50IjoxLCJ2b3RlX2F2ZXJhZ2UiOjgsInRpdGxlIjoiVGhlIEF2ZW5nZXJzOiBFYXJ0aCdzIE1pZ2h0aWVzdCBIZXJvZXMgLSBQcmVsdWRlIiwicmVsZWFzZV9kYXRlIjoiMjAxMC0wOS0yMiIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBBdmVuZ2VyczogRWFydGgncyBNaWdodGllc3QgSGVyb2VzIC0gUHJlbHVkZSIsImdlbnJlX2lkcyI6WzE2LDI4XSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiYWR1bHQiOmZhbHNlLCJvdmVydmlldyI6IkEgMTEwIG1pbnV0ZSBwcmVsdWRlIHRvIHRoZSAyMDEwIGFuaW1hdGVkIHNlcmllcywgY29uc2lzdGluZyBvZiBmaXZlLWFuZC1hLWhhbGYtbWludXRlIGNoYXB0ZXJzIGNyZWF0ZWQgZnJvbSBmb290YWdlIGZyb20gc2Vhc29uLW9uZSBlcGlzb2RlcywgcHJlbWllcmVkIG9ubGluZSBhbmQgb24gRGlzbmV5IFhEIG9uIFNlcHRlbWJlciAyMiwgMjAxMC4gU2VyaWVzIHN1cGVydmlzaW5nIHByb2R1Y2VyIEpvc2ggRmluZSBzYWlkIHRoZSBnb2FsIHdhcyB0byBcImxldCB1cyBleHBsb3JlIHRoZSBpbmRpdmlkdWFsIG1lbWJlcnMgb2YgdGhlIHRlYW0gaW4gdGhlaXIgb3duIG9uZ29pbmcgYWR2ZW50dXJlcyAuLi4gZG8gYSBsb3Qgb2YgY2hhcmFjdGVyIGRldmVsb3BtZW50IGFuZCBzZXQgdGhlIHN0YWdlIGZvciB0aGUgcmVzdCBvZiB0aGUgc2Vhc29uXCIuIiwicG9zdGVyX3BhdGgiOiJcLzNvN01wT2FEa2VBY3Z4cUVqZ2JJY1hyY2VwQi5qcGcifSx7InBvcHVsYXJpdHkiOjAuNiwidm90ZV9jb3VudCI6MCwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6bnVsbCwiaWQiOjY0ODQxNiwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJOZXcgQXZlbmdlcnMiLCJnZW5yZV9pZHMiOltdLCJ0aXRsZSI6Ik5ldyBBdmVuZ2VycyIsInZvdGVfYXZlcmFnZSI6MCwib3ZlcnZpZXciOiJXaGVuIEthbmcgdGhyZWF0ZW5zIHRoZSB0aW1lbGluZSBvZiB5b3VuZyBoZXJvZXMsIG11Y2ggbGllcyBhaGVhZCIsInJlbGVhc2VfZGF0ZSI6IiJ9LHsicG9wdWxhcml0eSI6MC42LCJ2b3RlX2NvdW50IjoxLCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC94cVl2UFVBNDZZUzhYSkhFZWdDVGE4WHhVYWEuanBnIiwiaWQiOjQxNjEwMSwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJOaW5qYSBBdmVuZ2VycyIsImdlbnJlX2lkcyI6W10sInRpdGxlIjoiTmluamEgQXZlbmdlcnMiLCJ2b3RlX2F2ZXJhZ2UiOjEwLCJvdmVydmlldyI6Ikp1c3QgbGlrZSB0aG9zZSBUaG9tYXMgVGFuZyBcInNvLWNhbGxlZFwiIE5pbmphIGZpbG1zIHRoYXQgY2FtZSBvdXQgb24gSW1wZXJpYWwgVmlkZW8uIFRoaXMgb25lIGhhcyBhIHRhY2tlZCBpbiBwbG90IG9mIFJpY2hhcmQgSGFycmlzb24gdHJ5aW5nIHRvIGZpZ2h0IG9mZiBFdXJvcGVhbiBOaW5qYXMgaW4gZm9vdGFnZSB0aGF0IGRvZXNuJ3QgZXZlbiBtYXRjaCB0aGUgZmlsbSEgVGhlIHdob2xlIGZpbG0gaXMgYmFzaWNhbGx5IGEgUkVEIFNVTiByaXAtb2ZmIChidXQgdGhpcyB0aW1lIHRoZSBKYXBhbmVzZSBzdGVhbCBhIHN0YXR1ZSkgdGhhdCBoYXMgYSBESkFOR08gbGlrZSBjaGFyYWN0ZXIgY2FycnlpbmcgYSBjcm9zcyB0aGF0IGNvbnRhaW5zIGEgZ2F0dGxpbmcgZ3VuLiIsInJlbGVhc2VfZGF0ZSI6IjE5ODctMDEtMDEifV19
  recorded_at: Mon, 24 Aug 2020 21:39:10 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=SECRET_TMDB_API_KEY&page=2&query=Avengers
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Content-Type:
      - application/json
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 24 Aug 2020 21:39:10 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 3ec85dbaae49079b372b8a392a12e9bc.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - BSW51K2lWR-SJlMYk9ZmKtXoR84YGblOvksu_KGWpdTsEBjDV3Uiqw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 24 Aug 2020 21:39:10 GMT
recorded_with: VCR 6.0.0
