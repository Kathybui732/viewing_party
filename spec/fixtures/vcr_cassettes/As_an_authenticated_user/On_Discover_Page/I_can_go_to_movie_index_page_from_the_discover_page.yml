---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/top_rated?api_key=SECRET_TMDB_API_KEY&page=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Content-Type:
      - application/json
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 25 Aug 2020 20:55:06 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 c4fb40b7909e4dd897bba2e297b284e7.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - kzPMttcOJ6iTv2xmObT5bnAxEsA68JcNfYV-yYF7WTd1MHvDiykaEw==
      Age:
      - '3172'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 25 Aug 2020 21:47:58 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/top_rated?api_key=SECRET_TMDB_API_KEY&page=2
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Content-Type:
      - application/json
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 25 Aug 2020 20:55:06 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 cddde15c11afac53ac9fe7978dcfecd7.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - OVrRAZVcYaoDIkqwKOz0Dq5smvuGlNJNWlJEpRJwszTXQswsODx59A==
      Age:
      - '3172'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 25 Aug 2020 21:47:58 GMT
recorded_with: VCR 6.0.0
